name: Build wheels, upload to PyPI upon release

on:
  push:
    branches:    
      - main
    paths-ignore:
      - 'doc/**'
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'doc/**'
  release:
    types: [created]

jobs:
  build_manylinux:
    name: Build manylinux wheels
    runs-on: ubuntu-latest
    strategy:
        matrix:
            #Avoid 3.10 for the moment
            pyver: [3.7, 3.8, 3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Build manylinux wheel
        uses: ./.github/workflows/actions/build_manylinux
        with:
            pyver: ${{ matrix.pyver }}
      - uses: actions/upload-artifact@v2-preview
        with:
          name: flaremodel-wheel-manylinux-latest
          path: wheelhouse/*
   
  build_osx_windows:
    name: Build wheels for macos and windows
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest,windows-latest]
        # Avoid 3.10 for the moment
        pyver: [3.7, 3.8, 3.9]
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
           activate-environment: flaremodel
           environment-file: .github/conda_env/conda-build-environment-${{ matrix.os }}.yml
           python-version: ${{ matrix.pyver }}
      - name: Install pip dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel
      - name: Set environment variables on Mac OS
        if: matrix.os == 'macos-latest'
        run: |
          echo "CFLAGS=-I$CONDA_PREFIX/include" >> $GITHUB_ENV
          echo "LDFLAGS=-L$CONDA_PREFIX/lib" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=-L$CONDA_PREFIX/lib" >> $GITHUB_ENV
      - name: Set environment variables on Windows
        if: matrix.os == 'windows-latest'
        run: |
          echo "INCLUDE=$CONDA_PREFIX\\Library\\include" >> $GITHUB_ENV
          echo "LIB=$CONDA_PREFIX\\Library\\lib" >> $GITHUB_ENV
          echo "LIBPATH=$CONDA_PREFIX\\Library\\lib" >> $GITHUB_ENV
      - name: Build extension
        run: |
          mkdir wheelhouse
          python setup.py build_ext
      - name: Build wheel
        run: python setup.py bdist_wheel -d wheelhouse
      - uses: actions/upload-artifact@v2-preview
        with:
          name: flaremodel-wheel-${{ matrix.os }}
          path: wheelhouse/*.whl

  upload:
    name: Upload wheels to test.pypi
    needs: [build_manylinux, build_osx_windows]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [manylinux, macos, windows]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
      - name: Publish wheels to test.pypi
        if: github.event_name == 'release' && github.event.action == 'created'
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
          packages_dir: flaremodel-wheel-${{ matrix.platform }}-latest

